<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Linux权限详解</title>
    <url>/2024/05/07/Linux%E6%9D%83%E9%99%90%E8%AF%A6%E8%A7%A3/</url>
    <content><![CDATA[<p>​	Linux系统上对文件的权限有着严格的控制，用于如果相对某个文件执行某种操作，必须具有对应的权限方可执行成功。</p>
<p>Linux下文件的权限类型一般包括读，写，执行。对应字母为 r、w、x。</p>
<p>Linux下权限的粒度有 拥有者 、群组 、其它组 三种。每个文件都可以针对三个粒度，设置不同的rwx(读写执行)权限。通常情况下，一个文件只能归属于一个用户和组， 如果其它的用户想有这个文件的权限，则可以将该用户加入具备权限的群组，一个用户可以同时归属于多个组。</p>
<p>Linux上通常使用chmod命令对文件的权限进行设置和更改。</p>
<h2 id="一、快速入门"><a href="#一、快速入门" class="headerlink" title="一、快速入门"></a>一、快速入门</h2><p>更改文件权限 （chmod命令）</p>
<h3 id="一般使用格式"><a href="#一般使用格式" class="headerlink" title="一般使用格式"></a>一般使用格式</h3><p><code>chmod [可选项] &lt;mode&gt; &lt;file...&gt;</code></p>
<p>参数说明：</p>
<p>[可选项]</p>
<p><code>-c</code>, –changes like verbose but report only when a change is made (若该档案权限确实已经更改，才显示其更改动作)</p>
<p><code>-f</code>, –silent, –quiet suppress most error messages （若该档案权限无法被更改也不要显示错误讯息）</p>
<p><code>-v</code>, –verbose output a diagnostic for every file processed（显示权限变更的详细资料）</p>
<p>–no-preserve-root do not treat ‘&#x2F;‘ specially (the default)</p>
<p>–preserve-root fail to operate recursively on ‘&#x2F;‘</p>
<p>–reference&#x3D;RFILE use RFILE’s mode instead of MODE values</p>
<p><code>-R</code>, –recursive change files and directories recursively （以递归的方式对目前目录下的所有档案与子目录进行相同的权限变更)</p>
<p><code>--help</code> 显示此帮助信息</p>
<p><code>--version</code> 显示版本信息</p>
<p>[mode]</p>
<p>权限设定字串，详细格式如下 ：</p>
<p>【ugoa】【【+-&#x3D;】【rwxX】…】【,…】,</p>
<p>其中</p>
<p>【ugoa】</p>
<p>u 表示该档案的拥有者，g 表示与该档案的拥有者属于同一个群体(group)者，o 表示其他以外的人，a 表示所有（包含上面三者）。</p>
<p>【+-&#x3D;】</p>
<p>+ 表示增加权限，- 表示取消权限，&#x3D; 表示唯一设定权限。</p>
<p>【rwxX】</p>
<p>r 表示可读取，w 表示可写入，x 表示可执行，X 表示只有当该档案是个子目录或者该档案已经被设定过为可执行。</p>
<p>【file…】</p>
<p>文件列表（单个或者多个文件、文件夹）</p>
<p> 范例：</p>
<p>设置所有用户可读取文件 a.conf</p>
<p><code>chmod ugo+r a.conf</code><br>或<br><code>chmod a+r a.conf</code></p>
<p>设置 c.sh 只有 拥有者可以读写及执行</p>
<p><code>chmod u+rwx c.sh</code></p>
<p>设置文件 a.conf 与 b.xml 权限为拥有者与其所属同一个群组 可读写，其它组可读不可写</p>
<p><code>chmod a+r,ug+w,o-w a.conf b.xml</code></p>
<p>设置当前目录下的所有档案与子目录皆设为任何人可读写</p>
<p><code>chmod -R a+rw *</code></p>
<h3 id="数字权限使用格式"><a href="#数字权限使用格式" class="headerlink" title="数字权限使用格式"></a>数字权限使用格式</h3><p>在这种使用方式中，首先我们需要了解数字如何表示权限。 首先，我们规定 数字 4 、2 和 1表示读、写、执行权限（具体原因可见下节权限详解内容），即 r&#x3D;4，w&#x3D;2，x&#x3D;1 。此时其他的权限组合也可以用其他的八进制数字表示出来，<br>如：<br>rwx &#x3D; 4 + 2 + 1 &#x3D; 7<br>rw &#x3D; 4 + 2 &#x3D; 6<br>rx &#x3D; 4 +1 &#x3D; 5</p>
<p>即<br>若要同时设置 rwx (可读写运行） 权限则将该权限位 设置 为 4 + 2 + 1 &#x3D; 7<br>若要同时设置 rw- （可读写不可运行）权限则将该权限位 设置 为 4 + 2 &#x3D; 6<br>若要同时设置 r-x （可读可运行不可写）权限则将该权限位 设置 为 4 +1 &#x3D; 5</p>
<p>上面我们提到，每个文件都可以针对三个粒度，设置不同的rwx(读写执行)权限。即我们可以用三个8进制数字分别表示 拥有者 、群组 、其它组( u、 g 、o)的权限详情，并用chmod直接加三个8进制数字的方式直接改变文件权限。语法格式为 ：</p>
<p><code>chmod &lt;abc&gt; file...</code></p>
<p>其中<br>a,b,c各为一个数字，分别代表User、Group、及Other的权限。<br>相当于简化版的<br>chmod u&#x3D;权限,g&#x3D;权限,o&#x3D;权限 file…<br>而此处的权限将用8进制的数字来表示User、Group、及Other的读、写、执行权限</p>
<p>范例：<br>设置所有人可以读写及执行<br><code>chmod 777 file</code> (等价于 chmod u&#x3D;rwx,g&#x3D;rwx,o&#x3D;rwx file 或 chmod a&#x3D;rwx file)<br>设置拥有者可读写，其他人不可读写执行<br><code>chmod 600 file</code> (等价于 chmod u&#x3D;rw,g&#x3D;—,o&#x3D;— file 或 chmod u&#x3D;rw,go-rwx file )<br>更改文件拥有者（chown命令）<br>linux&#x2F;Unix 是多人多工作业系统，每个的文件都有拥有者（所有者），如果我们想变更文件的拥有者（利用 chown 将文件拥有者加以改变），一般只有系统管理员(root)拥有此操作权限，而普通用户则没有权限将自己或者别人的文件的拥有者设置为别人。</p>
<p>语法格式：<br><code>chown [可选项] user[:group] file...</code></p>
<p>使用权限：root</p>
<p>说明：</p>
<p>[可选项] : 同上文chmod</p>
<p>user : 新的文件拥有者的使用者</p>
<p>group : 新的文件拥有者的使用者群体(group)</p>
<p>范例：</p>
<p>设置文件 d.key、e.scrt的拥有者设为 users 群体的 tom</p>
<p><code>chown tom:users file d.key e.scrt</code></p>
<p>设置当前目录下与子目录下的所有文件的拥有者为 users 群体的 James</p>
<p><code>chown -R James:users *</code></p>
<h2 id="二、Linux权限详解"><a href="#二、Linux权限详解" class="headerlink" title="二、Linux权限详解"></a>二、Linux权限详解</h2><p>​	Linux系统上对文件的权限有着严格的控制，用于如果相对某个文件执行某种操作，必须具有对应的权限方可执行成功。这也是Linux有别于Windows的机制，也是基于这个权限机制，Linux可以有效防止病毒自我运行，因为运行的条件是必须要有运行的权限，而这个权限在Linux是用户所赋予的。</p>
<p>Linux的文件权限有以下设定：</p>
<p>Linux下文件的权限类型一般包括读，写，执行。对应字母为 r、w、x。</p>
<p>Linux下权限的属组有 拥有者 、群组 、其它组 三种。每个文件都可以针对这三个属组（粒度），设置不同的rwx(读写执行)权限。</p>
<p>通常情况下，一个文件只能归属于一个用户和组， 如果其它的用户想有这个文件的权限，则可以将该用户加入具备权限的群组，一个用户可以同时归属于多个组。</p>
<p>如果我们要表示一个文件的所有权限详情，有两种方式：</p>
<p>第一种是十位二进制表示法，(三个属组每个数组使用一个二进制位，再加一个最高位共十位)，可简化为三位八进制形式</p>
<p>另外一种十二位二进制表示法(十二个二进制位)，可简化为四位八进制形式</p>
<p>十位权限表示</p>
<p>常见的权限表示形式有：</p>
<p>-rw——- (600) 只有拥有者有读写权限。</p>
<p>-rw-r–r– (644) 只有拥有者有读写权限；而属组用户和其他用户只有读权限。</p>
<p>-rwx—— (700) 只有拥有者有读、写、执行权限。</p>
<p>-rwxr-xr-x (755) 拥有者有读、写、执行权限；而属组用户和其他用户只有读、执行权限。</p>
<p>-rwx–x–x (711) 拥有者有读、写、执行权限；而属组用户和其他用户只有执行权限。</p>
<p>-rw-rw-rw- (666) 所有用户都有文件读、写权限。</p>
<p>-rwxrwxrwx (777) 所有用户都有读、写、执行权限。</p>
<p>后九位解析： 我们知道Linux权限总共有三个属组，这里我们给每个属组使用三个位置来定义三种操作（读、写、执行）权限，合起来则是权限的后九位。 上面我们用字符表示权限，其中 -代表无权限，r代表读权限，w代表写权限，x代表执行权限。</p>
<p>实际上，后九位每个位置的意义（代表某个属组的某个权限）都是固定的，如果我们将各个位置权限的有无用二进制数 1和 0来代替，则只读、只写、只执行权限，可以用三位二进制数表示为</p>
<p>r– &#x3D; 100</p>
<p>-w- &#x3D; 010</p>
<p>–x &#x3D; 001</p>
<p>— &#x3D; 000</p>
<p>转换成八进制数，则为 r&#x3D;4, w&#x3D;2, x&#x3D;1, -&#x3D;0（这也就是用数字设置权限时为何是4代表读，2代表写，1代表执行）</p>
<p>实际上，我们可以将所有的权限用二进制形式表现出来，并进一步转变成八进制数字：</p>
<p>rwx &#x3D; 111 &#x3D; 7</p>
<p>rw- &#x3D; 110 &#x3D; 6</p>
<p>r-x &#x3D; 101 &#x3D; 5</p>
<p>r– &#x3D; 100 &#x3D; 4</p>
<p>-wx &#x3D; 011 &#x3D; 3</p>
<p>-w- &#x3D; 010 &#x3D; 2</p>
<p>–x &#x3D; 001 &#x3D; 1</p>
<p>— &#x3D; 000 &#x3D; 0</p>
<p>由上可以得出，每个属组的所有的权限都可以用一位八进制数表示，每个数字都代表了不同的权限（权值）。如 最高的权限为是7，代表可读，可写，可执行。</p>
<p>故 如果我们将每个属组的权限都用八进制数表示，则文件的权限可以表示为三位八进制数</p>
<p>-rw——- &#x3D; 600</p>
<p>-rw-rw-rw- &#x3D; 666</p>
<p>-rwxrwxrwx &#x3D; 777</p>
<p>关于第一位最高位的解释： 上面我们说到了权限表示中后九位的含义，剩下的第一位代表的是文件的类型，类型可以是下面几个中的一个：</p>
<p>d代表的是目录(directroy)</p>
<p>-代表的是文件(regular file)</p>
<p>s代表的是套字文件(socket)</p>
<p>p代表的管道文件(pipe)或命名管道文件(named pipe)</p>
<p>l代表的是符号链接文件(symbolic link)</p>
<p>b代表的是该文件是面向块的设备文件(block-oriented device file)</p>
<p>c代表的是该文件是面向字符的设备文件(charcter-oriented device file)</p>
<p>下图是文件权限的解释图：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://streamcons.oss-cn-guangzhou.aliyuncs.com/img/Linux1.png"
                     
                ></p>
<p>出处：<a class="link"   href="https://javaforall.cn/130109.html" >https://javaforall.cn/130109.html <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>原文链接：<a class="link"   href="https://javaforall.cn/" >https://javaforall.cn <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Shell脚本学习笔记（一）</title>
    <url>/2024/05/05/Shell%E8%84%9A%E6%9C%AC%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%80/</url>
    <content><![CDATA[<h1 id="Shell大纲"><a href="#Shell大纲" class="headerlink" title="Shell大纲"></a>Shell大纲</h1><p>下图是我看网络课程所画出的思维导图：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://streamcons.oss-cn-guangzhou.aliyuncs.com/img/Shell%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE.png"
                     
                ></p>
<h2 id="变量替换和测试"><a href="#变量替换和测试" class="headerlink" title="变量替换和测试"></a>变量替换和测试</h2><h3 id="1、-变量-匹配规则"><a href="#1、-变量-匹配规则" class="headerlink" title="1、${变量#匹配规则}"></a>1、${变量#匹配规则}</h3><p>从头开始匹配，最短删除（匹配后相应的规则后只删除第一个匹配到的）</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">root@XQH:/TestShell# variable_2=&quot;I love you,Do you love me?&quot;</span><br><span class="line">root@XQH:/TestShell# echo $variable_2</span><br><span class="line">I love you,Do you love me?</span><br><span class="line">root@XQH:/TestShell# var1=$&#123;variable_2#*ov&#125;</span><br><span class="line">root@XQH:/TestShell# echo $var1</span><br><span class="line">e you,Do you love me?</span><br></pre></td></tr></table></figure></div>

<h3 id="2、-变量-匹配规则"><a href="#2、-变量-匹配规则" class="headerlink" title="2、${变量##匹配规则}"></a>2、${变量##匹配规则}</h3><p>从头开始匹配，最长删除</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">root@XQH:/TestShell# var2=$&#123;variable_2##*ov&#125;</span><br><span class="line">root@XQH:/TestShell# echo $var2</span><br><span class="line">e me?</span><br></pre></td></tr></table></figure></div>

<h3 id="3、-变量-匹配规则"><a href="#3、-变量-匹配规则" class="headerlink" title="3、${变量%匹配规则}"></a>3、${变量%匹配规则}</h3><p>从尾开始匹配，最短删除</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">root@XQH:/TestShell# var3=$&#123;variable_2%ov*&#125;</span><br><span class="line">root@XQH:/TestShell# echo $var3</span><br><span class="line">I love you,Do you l</span><br></pre></td></tr></table></figure></div>

<h3 id="4、-变量-匹配规则"><a href="#4、-变量-匹配规则" class="headerlink" title="4、${变量%%匹配规则}"></a>4、${变量%%匹配规则}</h3><p>从尾开始匹配，最短删除</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">root@XQH:/TestShell# var3=$&#123;variable_2%%ov*&#125;</span><br><span class="line">root@XQH:/TestShell# echo $var3             </span><br><span class="line">I l</span><br></pre></td></tr></table></figure></div>

<h3 id="5、-变量-旧字符串-新字符串"><a href="#5、-变量-旧字符串-新字符串" class="headerlink" title="5、${变量&#x2F;旧字符串&#x2F;新字符串}"></a>5、${变量&#x2F;旧字符串&#x2F;新字符串}</h3><p>替换变量内的旧字符串，只替换第一处</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">root@XQH:/TestShell# echo $PATH</span><br><span class="line">/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin</span><br><span class="line"></span><br><span class="line">root@XQH:/TestShell# var5=$&#123;PATH/bin/BIN&#125;</span><br><span class="line">root@XQH:/TestShell# echo $var5</span><br><span class="line">/usr/local/sBIN:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin</span><br></pre></td></tr></table></figure></div>

<h3 id="6、-变量-旧字符串-新字符串"><a href="#6、-变量-旧字符串-新字符串" class="headerlink" title="6、${变量&#x2F;&#x2F;旧字符串&#x2F;新字符串}"></a>6、${变量&#x2F;&#x2F;旧字符串&#x2F;新字符串}</h3><p>替换变量内的旧字符串，全部替换</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">root@XQH:/TestShell# var6=$&#123;PATH//bin/BIN&#125;</span><br><span class="line">root@XQH:/TestShell# echo $var6</span><br><span class="line">/usr/local/sBIN:/usr/local/BIN:/usr/sBIN:/usr/BIN:/sBIN:/BIN</span><br></pre></td></tr></table></figure></div>

<h2 id="字符串处理"><a href="#字符串处理" class="headerlink" title="字符串处理"></a>字符串处理</h2><p><strong>有用到expr这个关键字的话索引下下标从1开始，没有用到expr关键字的话检索时索引下标都是从0开始</strong></p>
<h3 id="1、计算字符串长度"><a href="#1、计算字符串长度" class="headerlink" title="1、计算字符串长度"></a>1、计算字符串长度</h3><h4 id="方法一："><a href="#方法一：" class="headerlink" title="方法一：&#96;$"></a>方法一：&#96;$</h4>]]></content>
      <categories>
        <category>Shell</category>
      </categories>
      <tags>
        <tag>Shell</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2024/05/03/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a class="link"   href="https://hexo.io/" >Hexo <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>! This is your very first post. Check <a class="link"   href="https://hexo.io/docs/" >documentation <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> for more info. If you get any problems when using Hexo, you can find the answer in <a class="link"   href="https://hexo.io/docs/troubleshooting.html" >troubleshooting <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> or you can ask me on <a class="link"   href="https://github.com/hexojs/hexo/issues" >GitHub <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/writing.html" >Writing <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/server.html" >Server <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/generating.html" >Generating <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/one-command-deployment.html" >Deployment <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
  </entry>
  <entry>
    <title>从0到1使用Hexo+Github Pages+Redefine+阿里云oss+Typora+PicGo搭建一套个人博客</title>
    <url>/2024/05/05/%E4%BB%8E0%E5%88%B01%E4%BD%BF%E7%94%A8Hexo+Github-Pages+%E9%98%BF%E9%87%8C%E4%BA%91oss+Typora+PicGo%E6%90%AD%E5%BB%BA%E4%B8%80%E5%A5%97%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<h1 id="一、搭建前的环境准备"><a href="#一、搭建前的环境准备" class="headerlink" title="一、搭建前的环境准备"></a>一、搭建前的环境准备</h1>
  <div class="note-large blue">
    <div class="notel-title rounded-t-lg p-3 font-bold text-lg flex flex-row gap-2 items-center">
      <p>所需环境</p>

    </div>
    <div class="notel-content">
      <p>1、Git：官网下载并安装到电脑上：<a class="link"   href="https://git-scm.com/" >https://git-scm.com/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>2、Node.js：官网下载并安装到电脑上：<a class="link"   href="https://nodejs.org/" >https://nodejs.org/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>

    </div>
  </div>



<h1 id="二、安装hexo，并完成简单的本地页面展示"><a href="#二、安装hexo，并完成简单的本地页面展示" class="headerlink" title="二、安装hexo，并完成简单的本地页面展示"></a>二、安装hexo，并完成简单的本地页面展示</h1><h2 id="1、进入cmd输入指令"><a href="#1、进入cmd输入指令" class="headerlink" title="1、进入cmd输入指令"></a>1、进入cmd输入指令</h2><p>1.1 进入cmd输入指令：<code>npm install -g hexo-cli</code>，然后输入<code>hexo -v</code> 查看hexo版本顺便验证是否安装成功。</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Users\X&gt;npm install -g hexo-cli</span><br><span class="line"></span><br><span class="line">added 53 packages <span class="keyword">in</span> 22s</span><br><span class="line"></span><br><span class="line">14 packages are looking <span class="keyword">for</span> funding</span><br><span class="line">  run `npm fund` <span class="keyword">for</span> details</span><br><span class="line">  </span><br><span class="line">E:\nodejs&gt;hexo -v</span><br><span class="line">hexo-cli: 4.3.2</span><br><span class="line">os: win32 10.0.19045 undefined</span><br><span class="line">node: 20.12.2</span><br><span class="line">acorn: 8.11.3</span><br><span class="line">ada: 2.7.6</span><br><span class="line">ares: 1.27.0</span><br><span class="line"><span class="built_in">base64</span>: 0.5.2</span><br><span class="line">brotli: 1.1.0</span><br><span class="line">cjs_module_lexer: 1.2.2</span><br><span class="line">cldr: 44.1</span><br><span class="line">icu: 74.2</span><br><span class="line">llhttp: 8.1.2</span><br><span class="line">modules: 115</span><br><span class="line">napi: 9</span><br><span class="line">nghttp2: 1.60.0</span><br><span class="line">nghttp3: 0.7.0</span><br><span class="line">ngtcp2: 0.8.1</span><br><span class="line">openssl: 3.0.13+quic</span><br><span class="line">simdutf: 4.0.8</span><br><span class="line">tz: 2024a</span><br><span class="line">undici: 5.28.4</span><br><span class="line">unicode: 15.1</span><br><span class="line">uv: 1.46.0</span><br><span class="line">uvwasi: 0.0.20</span><br><span class="line">v8: 11.3.244.8-node.19</span><br><span class="line">zlib: 1.3.0.1-motley-40e35a7</span><br></pre></td></tr></table></figure></div>

<h2 id="2、创建文件夹并初始化hexo"><a href="#2、创建文件夹并初始化hexo" class="headerlink" title="2、创建文件夹并初始化hexo"></a>2、创建文件夹并初始化hexo</h2><p>2.1 创建一个文件夹Test（这个文件夹用来存放hexo初始化后的文件），并在这个创建好的test文件夹下直接右键git bash打开。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://streamcons.oss-cn-guangzhou.aliyuncs.com/BlogImg/Hexo/2024-05-03_223819.png"
                     
                ></p>
<p>2.2 查看是否能启动成功</p>
<p><code>hexo s</code></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://streamcons.oss-cn-guangzhou.aliyuncs.com/BlogImg/Hexo/2024-05-03_223925.png"
                     
                ></p>
 
  <div class="note-large red">
    <div class="notel-title rounded-t-lg p-3 font-bold text-lg flex flex-row gap-2 items-center">
      <p>指定文件夹目录</p>

    </div>
    <div class="notel-content">
      <p>node_modules: 依赖包</p>
<p>public：存放生成的页面</p>
<p>scaffolds：生成文章的一些模板</p>
<p>source：用来存放你的文章</p>
<p>themes：主题</p>
<p><strong>_config.yml: 博客的配置文件</strong></p>

    </div>
  </div>



<p>2.3 复制网址打开</p>
<p><code>http://localhost:4000/</code></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://streamcons.oss-cn-guangzhou.aliyuncs.com/BlogImg/Hexo/2024-05-03_224033.png"
                     
                ></p>
<h1 id="三、将Hexo部署到github"><a href="#三、将Hexo部署到github" class="headerlink" title="三、将Hexo部署到github"></a>三、将Hexo部署到github</h1><h2 id="1、Github创建个人仓库"><a href="#1、Github创建个人仓库" class="headerlink" title="1、Github创建个人仓库"></a>1、Github创建个人仓库</h2>
  <div class="note p-4 mb-4 rounded-small success">
    <p>首先，需要有一个github账号。登上账号后建一个仓库：仓库名为你的用户名.github.io，<br>举例如下：<br>创建一个和你用户名相同的仓库，后面加.github.io，<br>只有这样，将来要部署到GitHub的时候，才会被识别，也就是xxxx.github.io，其中xxx就是你注册GitHub的用户名。</p>

  </div>

<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://streamcons.oss-cn-guangzhou.aliyuncs.com/BlogImg/Hexo/a.png"
                     
                ></p>
<h2 id="2、生成ssh添加到Github"><a href="#2、生成ssh添加到Github" class="headerlink" title="2、生成ssh添加到Github"></a>2、生成ssh添加到Github</h2>
  <div class="note p-4 mb-4 rounded-small primary">
    <p>在Github上创建仓库完成之后，需要设置ssh免密登录</p>

  </div>



<p>2.1 打开cmd窗口：执行如下命令</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;yourname&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;youremail&quot;</span></span><br></pre></td></tr></table></figure></div>

<p>防止输错可以检查：</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">git config user.name</span><br><span class="line">git config user.email</span><br></pre></td></tr></table></figure></div>



<p>2.2 接着进入家目录：C:\Users\X（这是你自己电脑上的家目录），右击打开git bash，输入：</p>
<p><code>ssh-keygen -t rsa -C 1500937374@qq.com（这里填你自己的QQ邮箱）</code></p>
<p>然后就敲三次回车：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://streamcons.oss-cn-guangzhou.aliyuncs.com/BlogImg/Hexo/b.png"
                     
                ></p>
<p>2.3 接着就会发现C：\Users\X 下多了一个.ssh目录，打开后有一个公钥，一个私钥。id_rsa.pub是公钥，我们需要打开它，复制里面的内容。</p>
<p>然后进入github：</p>
<p>点击<strong>setting</strong></p>
<p>进行以下操作</p>
<p>找到SSH and GPG keys选项——&gt;点击绿色按钮“New SSH key”——&gt;输入相应的title和key（key为上一步的id_rsa.pub里的内容）——&gt;然后点击Add SSH Key</p>
<h2 id="3、进行部署"><a href="#3、进行部署" class="headerlink" title="3、进行部署"></a>3、进行部署</h2>
  <div class="note p-4 mb-4 rounded-small primary">
    <p>这一步，我们就可以将hexo和GitHub关联起来，也就是将hexo生成的文章部署到GitHub上，打开站点配置文件 _config.yml，翻到最后，修改为YourgithubName（就是你的GitHub账户）。</p>

  </div>



<p>3.1 修改配置文件，然后修改内容：</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: git@github.com:goubin18/goubin18.github.io.git</span><br><span class="line">  branch: main</span><br></pre></td></tr></table></figure></div>


  <div class="note-large default">
    <div class="notel-title rounded-t-lg p-3 font-bold text-lg flex flex-row gap-2 items-center">
      <i class="notel-icon fa-solid fa-info"></i><p>注意</p>

    </div>
    <div class="notel-content">
      <p>在这里我们需要注意的是在每一个类型下都有一个空格，因为配置文件<code>_config.redefine.yml</code>使用yaml语法，所以我们需要注意缩进。</p>

    </div>
  </div>

<p><strong>repo：获取步骤如下</strong></p>
<p><strong>点进自己刚刚创建的仓库，复制</strong></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://streamcons.oss-cn-guangzhou.aliyuncs.com/BlogImg/Hexo/2024-05-05_154324.png"
                     
                ></p>
<p>3.2 找到自己的博客路径打开，这个时候需要先安装deploy-git ，也就是部署的命令,这样你才能用命令部署到GitHub。</p>
<p><code>npm install hexo-deployer-git --save</code></p>
<p>3.3 然后依次执行以下命令：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo clean   		#清除缓存文件 db.json 和已生成的静态文件 public</span><br><span class="line">hexo generate       #生成网站静态文件到默认设置的 public 文件夹(hexo generate 的缩写)</span><br><span class="line">hexo deploy			#自动生成网站静态文件，并部署到设定的仓库(hexo deploy 的缩写)</span><br></pre></td></tr></table></figure></div>

<p>注意在输入<code>hexo deploy</code>后会有一个提示让你手动输入yes&#x2F;no，我们直接输入yes。</p>
<p>最后回到Github上查看自己的仓库：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://streamcons.oss-cn-guangzhou.aliyuncs.com/BlogImg/Hexo/2024-05-05_155620.png"
                     
                ></p>
<p>上传成功。</p>
<p>现在可以使用xxx.github.io就可以访问你的博客了。</p>
<h1 id="四、使用Hexo的主题Redefine"><a href="#四、使用Hexo的主题Redefine" class="headerlink" title="四、使用Hexo的主题Redefine"></a>四、使用Hexo的主题Redefine</h1><p>现在我们可以进一步的美化博客，我选择的是Hexo的主题商店里的Redefine。</p>
<p>Hexo官网主题：<a class="link"   href="https://hexo.io/themes/" >https://hexo.io/themes/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>Redefine部署及使用文档：<a class="link"   href="https://redefine-docs.ohevan.com/introduction" >https://redefine-docs.ohevan.com/introduction <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h2 id="1、安装主题"><a href="#1、安装主题" class="headerlink" title="1、安装主题"></a>1、安装主题</h2><p>在 Hexo 根目录执行以下命令安装主题，有两种方式：npm、git。</p>
<p>我使用的是npm方式，git方式可以自己去官网文档查看：</p>
<p><code>npm install hexo-theme-redefine@latest</code></p>
<h2 id="2、启动主题"><a href="#2、启动主题" class="headerlink" title="2、启动主题"></a>2、启动主题</h2><p>在 Hexo 根目录的 <code>_config.yml</code> 文件中，将 <code>theme</code> 值修改为 <code>redefine</code>。</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">theme: redefine</span><br></pre></td></tr></table></figure></div>

<h2 id="3、创建主题配置文件"><a href="#3、创建主题配置文件" class="headerlink" title="3、创建主题配置文件"></a>3、创建主题配置文件</h2><p>在 Hexo 根目录下创建 <code>_config.redefine.yml</code> 文件。</p>
<p>并将<a class="link"   href="https://github.com/EvanNotFound/hexo-theme-redefine/blob/main/_config.yml" >此处 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>的所有内容复制进去。</p>
<p>本文件会自动覆盖主题的配置项，创建本文件的目的是为了方便你在升级主题时，不会丢失你的配置。</p>
<h2 id="4、创建成功"><a href="#4、创建成功" class="headerlink" title="4、创建成功"></a>4、创建成功</h2><p>现在就可以启动Hexo，看看效果了。</p>
<p>后续的步骤请移步<a class="link"   href="https://redefine-docs.ohevan.com/" >官方文档 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>仔细查看使用方法。</p>
<h2 id="5、属于Redefine的Typroa主题"><a href="#5、属于Redefine的Typroa主题" class="headerlink" title="5、属于Redefine的Typroa主题"></a>5、属于Redefine的Typroa主题</h2><p>我们可以在官方文档的写作指南上找到适合写文章的Typroa主题，也可点击 <a class="link"   href="https://github.com/EvanNotFound/typora-theme-redefine" >这里 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 直接进入下载。</p>
<h1 id="五、关于在博客上使用图片的存储问题"><a href="#五、关于在博客上使用图片的存储问题" class="headerlink" title="五、关于在博客上使用图片的存储问题"></a>五、关于在博客上使用图片的存储问题</h1><p>因为在博客上写文章的时候需要引用自己的图片，所以我们可以使用<strong>阿里云OSS存储+Picgo</strong>的方式。</p>
<p>具体细节可以参考这一篇文章来进行设置：<a class="link"   href="https://developer.aliyun.com/article/1465963?spm=a2c6h.12873639.article-detail.24.e9234aefLQGLq8" >https://developer.aliyun.com/article/1465963?spm=a2c6h.12873639.article-detail.24.e9234aefLQGLq8 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>经过上述步骤后，我们就拥有了一个属于自己的个人博客。</p>
<p><strong>参考文章：</strong>使用Hexo从0到1搭建个人博客详细教程（超详细，超简单）（<a class="link"   href="https://developer.aliyun.com/article/1218122%EF%BC%89" >https://developer.aliyun.com/article/1218122） <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>手把手教你搭建阿里云图床(PicGo+Typora+阿里云OSS)，新手小白一看就会（<a class="link"   href="https://developer.aliyun.com/article/1465963?spm=a2c6h.12873639.article-detail.24.e9234aefLQGLq8%EF%BC%89" >https://developer.aliyun.com/article/1465963?spm=a2c6h.12873639.article-detail.24.e9234aefLQGLq8） <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>Redefine官网（<a class="link"   href="https://redefine-docs.ohevan.com/%EF%BC%89" >https://redefine-docs.ohevan.com/） <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>搭建个人博客</category>
      </categories>
      <tags>
        <tag>搭建个人博客</tag>
        <tag>Hexo</tag>
        <tag>PicGo</tag>
        <tag>Typora</tag>
      </tags>
  </entry>
  <entry>
    <title>博客写作模板</title>
    <url>/2024/05/04/%E5%86%99%E4%BD%9C%E6%A8%A1%E6%9D%BF/</url>
    <content><![CDATA[<h1 id="写作模板"><a href="#写作模板" class="headerlink" title="写作模板"></a>写作模板</h1><h4 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h4><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">test</span></span><br></pre></td></tr></table></figure></div>

<h3 id="示例图片"><a href="#示例图片" class="headerlink" title="示例图片"></a>示例图片</h3><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://streamcons.oss-cn-guangzhou.aliyuncs.com/img/c.png"
                      alt="test"
                ></p>
<h2 id="大号提示块"><a href="#大号提示块" class="headerlink" title="大号提示块"></a>大号提示块</h2><h3 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h3><p>（<code>notel</code>意思是<code>note large</code>，方便记，也可以是<code>note-large</code>）</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">&#123;% notel [颜色] [可选: 自定义图标] [标题] %&#125;</span><br><span class="line">内容</span><br><span class="line">支持换行</span><br><span class="line">&#123;% endnotel %&#125;</span><br></pre></td></tr></table></figure></div>

<table>
<thead>
<tr>
<th>参数</th>
<th>说明</th>
<th>可选值</th>
</tr>
</thead>
<tbody><tr>
<td>颜色</td>
<td>提示块的样式或颜色</td>
<td><code>blue</code>、<code>red</code>、<code>cyan</code>、<code>purple</code>、<code>orange</code>、<code>yellow</code>、<code>green</code></td>
</tr>
<tr>
<td>自定义图标</td>
<td>自定义图标，选填</td>
<td>Fontawsome的图标名称后半部分，比如<code>fa-image</code></td>
</tr>
</tbody></table>
<h3 id="例如"><a href="#例如" class="headerlink" title="例如"></a>例如</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">&#123;% notel default fa-info 信息 %&#125;</span><br><span class="line"></span><br><span class="line">换行测试</span><br><span class="line"></span><br><span class="line">换行测试</span><br><span class="line"></span><br><span class="line">换行测试</span><br><span class="line"></span><br><span class="line">&#123;% endnotel %&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;% notel blue 提示 %&#125;</span><br><span class="line"></span><br><span class="line">换行测试</span><br><span class="line"></span><br><span class="line">换行测试</span><br><span class="line"></span><br><span class="line">换行测试</span><br><span class="line"></span><br><span class="line">&#123;% endnotel %&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> &#123;% notel red 自定义标题 %&#125;</span><br><span class="line"></span><br><span class="line">换行测试</span><br><span class="line"></span><br><span class="line">换行测试</span><br><span class="line"></span><br><span class="line">换行测试</span><br><span class="line"></span><br><span class="line">&#123;% endnotel %&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></div>

<h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3>
  <div class="note-large default">
    <div class="notel-title rounded-t-lg p-3 font-bold text-lg flex flex-row gap-2 items-center">
      <i class="notel-icon fa-solid fa-info"></i><p>信息</p>

    </div>
    <div class="notel-content">
      <p>换行测试</p>
<p>换行测试</p>
<p>换行测试</p>

    </div>
  </div>




  <div class="note-large blue">
    <div class="notel-title rounded-t-lg p-3 font-bold text-lg flex flex-row gap-2 items-center">
      <p>提示</p>

    </div>
    <div class="notel-content">
      <p>换行测试</p>
<p>换行测试</p>
<p>换行测试</p>

    </div>
  </div>



 
  <div class="note-large red">
    <div class="notel-title rounded-t-lg p-3 font-bold text-lg flex flex-row gap-2 items-center">
      <p>自定义标题</p>

    </div>
    <div class="notel-content">
      <p>换行测试</p>
<p>换行测试</p>
<p>换行测试</p>

    </div>
  </div>

<h2 id="小号提示块"><a href="#小号提示块" class="headerlink" title="小号提示块"></a>小号提示块</h2><h3 id="格式-1"><a href="#格式-1" class="headerlink" title="格式"></a>格式</h3><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% note [样式/颜色] [可选: 自定义图标] %&#125;</span><br><span class="line">笔记内容</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure></div>

<table>
<thead>
<tr>
<th>参数</th>
<th>说明</th>
<th>可选值</th>
</tr>
</thead>
<tbody><tr>
<td>样式&#x2F;颜色</td>
<td>提示块的样式或颜色</td>
<td><code>success</code>、<code>default</code>、<code>primary</code>、<code>info</code>、<code>warning</code>、<code>danger</code>、<code>tip</code>、<code>question</code>以及<code>blue</code>、<code>red</code>、<code>cyan</code>、<code>purple</code>、<code>orange</code>、<code>yellow</code>、<code>green</code>等颜色</td>
</tr>
<tr>
<td>自定义图标</td>
<td>自定义图标，选填</td>
<td>Fontawsome的图标名称后半部分，比如<code>fa-image</code></td>
</tr>
</tbody></table>
<h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">&#123;% note  %&#125;</span><br><span class="line">默认 提示块标签</span><br><span class="line">&#123;% endnote %&#125; </span><br><span class="line"></span><br><span class="line">&#123;% note default  %&#125;</span><br><span class="line">default 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary  %&#125;</span><br><span class="line">primary 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success  %&#125;</span><br><span class="line">success 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info  %&#125;</span><br><span class="line">info 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning  %&#125;</span><br><span class="line">warning 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger  %&#125;</span><br><span class="line">danger 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red fa-bolt%&#125;</span><br><span class="line">自定义提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure></div>

<h3 id="效果-1"><a href="#效果-1" class="headerlink" title="效果"></a>效果</h3>
  <div class="note p-4 mb-4 rounded-small default">
    <p>默认 提示块标签</p>

  </div> 




  <div class="note p-4 mb-4 rounded-small default">
    <p>default 提示块标签</p>

  </div>




  <div class="note p-4 mb-4 rounded-small primary">
    <p>primary 提示块标签</p>

  </div>




  <div class="note p-4 mb-4 rounded-small success">
    <p>success 提示块标签</p>

  </div>




  <div class="note p-4 mb-4 rounded-small info">
    <p>info 提示块标签</p>

  </div>




  <div class="note p-4 mb-4 rounded-small warning">
    <p>warning 提示块标签</p>

  </div>




  <div class="note p-4 mb-4 rounded-small danger">
    <p>danger 提示块标签</p>

  </div>




  <div class="note p-4 mb-4 rounded-small red icon-padding">
    <i class="note-icon fa-solid fa-bolt"></i><p>自定义提示块标签</p>

  </div>

<h2 id="折叠模块"><a href="#折叠模块" class="headerlink" title="折叠模块"></a>折叠模块</h2><h3 id="写法"><a href="#写法" class="headerlink" title="写法"></a>写法</h3><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% folding [颜色]::[标题] %&#125;</span><br><span class="line">需要写的内容</span><br><span class="line">&#123;% endfolding %&#125;</span><br></pre></td></tr></table></figure></div>

<h3 id="例子-1"><a href="#例子-1" class="headerlink" title="例子"></a>例子</h3><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% folding blue::Folding 测试： 点击查看更多 %&#125;</span><br><span class="line"></span><br><span class="line">啊啊啊啊啊 </span><br><span class="line"></span><br><span class="line">&#123;% note danger  %&#125;</span><br><span class="line"></span><br><span class="line">danger 提示块标签</span><br><span class="line"></span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note tip  %&#125;</span><br><span class="line"></span><br><span class="line">tip 提示块标签</span><br><span class="line"></span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br></pre></td></tr></table></figure></div>

<h3 id="效果-2"><a href="#效果-2" class="headerlink" title="效果"></a>效果</h3><details class="blue" data-header-exclude><summary><i class="fa-solid fa-chevron-right"></i>Folding 测试： 点击查看更多 </summary>
              <div class='content'>
              <p>测试测试测试</p>  <div class="note p-4 mb-4 rounded-small danger">    <p>danger 提示块标签</p>  </div>  <div class="note p-4 mb-4 rounded-small tip">    <p>tip 提示块标签</p>  </div>
              </div>
            </details>

<h3 id="颜色列表"><a href="#颜色列表" class="headerlink" title="颜色列表"></a>颜色列表</h3><p><code>yellow</code>、<code>blue</code>、<code>green</code>、<code>red</code>、<code>orange</code>、<code>pink</code>、<code>cyan</code>、<code>white</code>、<code>black</code>、<code>gray</code></p>
<h2 id="Tabs分栏模块"><a href="#Tabs分栏模块" class="headerlink" title="Tabs分栏模块"></a>Tabs分栏模块</h2><p>通过本模块可以在页面中添加多个栏目，用户可以通过点击标签页来切换内容</p>
<h3 id="写法-1"><a href="#写法-1" class="headerlink" title="写法"></a>写法</h3><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% tabs 页面内不重复的ID %&#125;</span><br><span class="line">&lt;!-- tab 栏目1名称 --&gt;</span><br><span class="line">内容</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&lt;!-- tab 栏目2名称 --&gt;</span><br><span class="line">内容</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure></div>

<p>其中，<code>页面内不重复的ID</code> 为你为这个选项卡创建的唯一标识符，可以随便取。</p>
<p>每个栏目内容使用 <code>&lt;!-- tab 栏目名称 --&gt;</code> 和 <code>&lt;!-- endtab --&gt;</code> 来定义。</p>
<h3 id="例子-2"><a href="#例子-2" class="headerlink" title="例子"></a>例子</h3><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% tabs First unique name %&#125;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab First Tab--&gt;</span><br><span class="line"></span><br><span class="line">***\*This is Tab 1.\****</span><br><span class="line"></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab Second Tab--&gt;</span><br><span class="line"></span><br><span class="line">***\*This is Tab 2.\**** </span><br><span class="line"></span><br><span class="line">This is Tab 2.</span><br><span class="line"></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab Third Tab--&gt;</span><br><span class="line"></span><br><span class="line">***\*This is Tab 3.\**** This is Tab 3. This is Tab 3.</span><br><span class="line"></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure></div>

<h3 id="效果-3"><a href="#效果-3" class="headerlink" title="效果"></a>效果</h3><div class="tabs" id="tab-first-unique-name"><ul class="nav-tabs"><li class="tab active"><a class="#first-unique-name-1">First Tab</a></li><li class="tab"><a class="#first-unique-name-2">Second Tab</a></li><li class="tab"><a class="#first-unique-name-3">Third Tab</a></li></ul><div class="tab-content"><div class="tab-pane active" id="first-unique-name-1"><p><em><strong>*This is Tab 1.*</strong></em></p></div><div class="tab-pane" id="first-unique-name-2"><p><em><strong>*This is Tab 2.*</strong></em> </p>
<p>This is Tab 2.</p></div><div class="tab-pane" id="first-unique-name-3"><p><em><strong>*This is Tab 3.*</strong></em> This is Tab 3. This is Tab 3.</p></div></div></div>

<h2 id="Buttons按钮模块"><a href="#Buttons按钮模块" class="headerlink" title="Buttons按钮模块"></a>Buttons按钮模块</h2><h3 id="写法-2"><a href="#写法-2" class="headerlink" title="写法"></a>写法</h3><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% btn [可选大小]::[名称]::[url]::[可选图标] %&#125;</span><br></pre></td></tr></table></figure></div>

<h3 id="变量可选值"><a href="#变量可选值" class="headerlink" title="变量可选值"></a>变量可选值</h3><p><code>[可选大小]</code>：</p>
<p><code>center</code>, <code>regular</code>, <code>large</code>, <code>center large</code>, <code>center regular</code></p>
<p><code>[可选图标]</code>：</p>
<p>Fontawsome图标名称，比如<code>fa-solid</code> <code>fa-house</code></p>
<h3 id="效果-4"><a href="#效果-4" class="headerlink" title="效果"></a>效果</h3><p>不设置任何参数的 <a class="button " href='/' title='按钮'>按钮</a> 适合融入段落中。 </p>
<p>regular 按钮适合独立于段落之外： </p>
<a class="button  regular" href='https://www.ohevan.com' title='示例博客'><i class='fa-solid fa-play-circle'></i> 示例博客</a>

<a class="button  regular" href='https://www.ohevan.com' title='示例博客'><i class='fa-solid fa-play-circle'></i> 示例博客</a> 

<p>large 按钮更具有强调作用，建议搭配 center 使用： </p>
<a class="button  center large" href='https://redefine-docs.ohevan.com' title='开始使用'>开始使用</a>

<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>写了在官网上说明的写作模板，如果还需看更详细的文档，请移步<a href="https://redefine-docs.ohevan.com/modules"><strong>官方文档</strong></a>查看。</p>
]]></content>
      <categories>
        <category>写作模板</category>
      </categories>
      <tags>
        <tag>Demo</tag>
        <tag>写作模板</tag>
        <tag>first</tag>
      </tags>
  </entry>
  <entry>
    <title>记一次VMware的虚拟机和主机的三种配置模式</title>
    <url>/2024/05/06/%E8%AE%B0%E4%B8%80%E6%AC%A1VMware%E7%9A%84%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%92%8C%E4%B8%BB%E6%9C%BA%E7%9A%84%E4%B8%89%E7%A7%8D%E9%85%8D%E7%BD%AE%E6%A8%A1%E5%BC%8F/</url>
    <content><![CDATA[<h1 id="一、VMware的三种配置模式"><a href="#一、VMware的三种配置模式" class="headerlink" title="一、VMware的三种配置模式"></a>一、VMware的三种配置模式</h1><h2 id="1、桥接模式"><a href="#1、桥接模式" class="headerlink" title="1、桥接模式"></a>1、桥接模式</h2><p><strong>特点：</strong></p>
<p>虚拟机和主机处于同等地位，并且和主机处于同一网段。</p>
<p><strong>原理：</strong></p>
<p>桥接模式，使用的是VMnet0虚拟网卡。</p>
<p>vmnet0实际上就是一个*<u>虚拟的网桥</u>*(2层交换机)，这个网桥有若干个接口，一个端口用于连接你的Host主机，其余</p>
<p>端口可以用于连接虚拟机，他们的位置是对等的，谁也不是谁的网关。所以桥接模式下，虚拟机和Host主机是同</p>
<p>等地位的主机。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://streamcons.oss-cn-guangzhou.aliyuncs.com/img/%E6%A1%A5%E6%8E%A5%E6%A8%A1%E5%BC%8F.png"
                     
                ></p>
<h2 id="2、NAT模式"><a href="#2、NAT模式" class="headerlink" title="2、NAT模式"></a>2、NAT模式</h2><p><strong>原理：</strong></p>
<p>NAT模式，就是让虚拟系统借助NAT（网络地址转换）功能，通过宿主机器所在的网络来访问公网。</p>
<p>实际上VMnet8充当了路由器的作用，负责将虚拟机转发到VMnet8的包进行地址转换之后发送到实际的网络中，</p>
<p>再将实际网络中返回的包进行地址转换后通过VMnet8发送给虚拟机。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://streamcons.oss-cn-guangzhou.aliyuncs.com/img/Nat%E6%A8%A1%E5%BC%8F.png"
                     
                ></p>

  <div class="note p-4 mb-4 rounded-small primary">
    <p>虚拟机的IP都是由虚拟交换机决定的，由虚拟NAT负责连接外网，而虚拟网卡VMware Network Adapter Vmnet8只是负责主机与虚拟机之间的通信。</p>

  </div>

<h2 id="3、仅主机模式"><a href="#3、仅主机模式" class="headerlink" title="3、仅主机模式"></a>3、仅主机模式</h2><p><strong>特点：</strong></p>
<p>只能和主机互相通信，不能上网，也不能访问其他主机，用于建立与外部隔离的网络环境。</p>
<p><strong>原理：</strong></p>

  <div class="note p-4 mb-4 rounded-small primary">
    <p>Host-only模式使用的是VMnet1网卡，这种情况下虚拟机连接到VMnet1上，但系统并不为其提供任何路由服务，因此虚拟机只能和宿主机进行通信，不能连接到真正的网络上。</p>

  </div>



<h1 id="二、遇到的问题"><a href="#二、遇到的问题" class="headerlink" title="二、遇到的问题"></a>二、遇到的问题</h1><p>因学习需要，故想安装linux系统配合shell远程连接使用，但是发现原来默认VMware虚拟网络编辑器里的VMnet8（NAT模式）配置无法让虚拟机成功ping通主机。</p>
<p><strong>这是VMware虚拟网络编辑器里VMnet8我更改后的配置：</strong></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://streamcons.oss-cn-guangzhou.aliyuncs.com/img/VMware1.png"
                     
                ></p>
<p>这是NAT设置里的内容，也就是NAT的网关。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://streamcons.oss-cn-guangzhou.aliyuncs.com/img/VMware2.png"
                     
                ></p>
<p>这是DHCP设置里的内容，也就是NAT的起始地址和结束地址。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://streamcons.oss-cn-guangzhou.aliyuncs.com/img/VMware3.png"
                     
                ></p>
<p>这是我的主机IP：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://streamcons.oss-cn-guangzhou.aliyuncs.com/img/VMware4.png"
                     
                ></p>
<p>这是我的虚拟机IP：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://streamcons.oss-cn-guangzhou.aliyuncs.com/img/VMware8.png"
                     
                ></p>
<p>此时，我尝试着从虚拟机ping主机ping：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://streamcons.oss-cn-guangzhou.aliyuncs.com/img/VMware5.png"
                     
                ></p>
<p>我尝试着虚拟机ping设置好的网关192.168.18.2：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://streamcons.oss-cn-guangzhou.aliyuncs.com/img/VMware6.png"
                     
                ></p>
<p>可以看出均无法ping通。</p>
<p>但是我尝试着从主机ping虚拟机：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://streamcons.oss-cn-guangzhou.aliyuncs.com/img/VMware7.png"
                     
                ></p>
<p>可以看出它ping通了。</p>
<p>后来经过查找网上大量资料后发现，NAT模式下并不能将子网IP（也就是DHCP分配的网段）设置成和主机的IP网段一致，并且网关IP不能被包含在DHCP设置里的起始地址和结束地址之间，由上面的配置可以看出，我把子网IP和主机IP的网段设为了一致，并且设置的默认网关IP（192.168.18.2）<strong>被包含</strong>在起始地址192.168.18.1~192.168.18.254内，所以我们需要把这两个地方更改一下，把子网IP的网段设置为和主机IP网段不一样，起始地址设置为192.168.xx.3即可（xx为即将设置的子网IP网段）。</p>
<p>下面是更换后的配置：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://streamcons.oss-cn-guangzhou.aliyuncs.com/img/VMware9.png"
                     
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://streamcons.oss-cn-guangzhou.aliyuncs.com/img/VMware10.png"
                     
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://streamcons.oss-cn-guangzhou.aliyuncs.com/img/VMware11.png"
                     
                ></p>
<p>更改后的虚拟机IP：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://streamcons.oss-cn-guangzhou.aliyuncs.com/img/VMware12.png"
                     
                ></p>
<p>然后我们可以测试一下主机和虚拟机能否互相ping通：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://streamcons.oss-cn-guangzhou.aliyuncs.com/img/VMware13.png"
                     
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://streamcons.oss-cn-guangzhou.aliyuncs.com/img/VMware14.png"
                     
                ></p>
<p>至此，虚拟机和主机和外网都打通了，问题得到了解决。</p>
<p>其实我们遇到这种情况一般都可以直接选择<strong>恢复默认设置</strong>这个选项，但我们在手动设置的时候出错后主动研究并解决问题可以培养一下自身解决问题的能力，我们显然选择后者更好。</p>
<p>参考文章：<strong>VMware虚拟机网络配置-NAT篇 <a class="link"   href="https://juejin.cn/post/7244099508212744253" >https://juejin.cn/post/7244099508212744253 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></strong></p>
]]></content>
      <categories>
        <category>VMware</category>
      </categories>
      <tags>
        <tag>VMware</tag>
      </tags>
  </entry>
</search>
